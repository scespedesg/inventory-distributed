name: Protect Branches
on:
  workflow_dispatch: {}   # lo ejecutas manualmente la primera vez

jobs:
  protect:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Ensure branches & protections
        env:
          GH_OWNER: scespedesg
          GH_REPO: inventory-distributed
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail

          api() {
            local method="$1" path="$2"
            shift 2
            curl -sSf -X "$method" "https://api.github.com/repos/$GH_OWNER/$GH_REPO$path" \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              "$@"
          }

          # 1) SHA de main
          MAIN_SHA=$(api GET "/git/ref/heads/main" | jq -r '.object.sha')

          # 2) Crear branches si no existen
          ensure_branch() {
            local BR="$1"
            if api GET "/git/ref/heads/$BR" >/dev/null 2>&1; then
              echo "Branch '$BR' ya existe"
            else
              echo "Creando branch '$BR' desde main..."
              api POST "/git/refs" -d @- <<JSON
              { "ref": "refs/heads/$BR", "sha": "$MAIN_SHA" }
JSON
            fi
          }

          ensure_branch integration
          ensure_branch laboratory

          # 3) Proteger branches (PR obligatorio + checks + sin push directo)
          protect_branch() {
            local BR="$1"
            echo "Aplicando protecciÃ³n a '$BR'..."
            api PUT "/branches/$BR/protection" -d @- <<'JSON'
            {
              "required_status_checks": {
                "strict": true,
                "checks": [ { "context": "build" } ]
              },
              "enforce_admins": true,
              "required_pull_request_reviews": {
                "required_approving_review_count": 1,
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": false,
                "require_last_push_approval": false
              },
              "restrictions": { "users": [], "teams": [], "apps": [] },
              "allow_force_pushes": false,
              "allow_deletions": false,
              "required_linear_history": false,
              "required_conversation_resolution": true
            }
JSON
          }

          protect_branch main
          protect_branch laboratory
          protect_branch integration

          echo "Protecciones aplicadas."
